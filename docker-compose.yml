volumes:
  datafiles:

services:
  tga.mysql:
    image: mysql:latest
    container_name: tga.mysql
    environment:
        MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    #Specify where the persisted Data should be stored
    volumes:
      - datafiles:/var/lib/mysql
      - ./my.cnf:/etc/mysql/my.cnf
    healthcheck:
       test : ["CMD", "mysqladmin", "ping", "-h", "localhost"]
       interval: 10s
       timeout: 5s
       retries: 5
    networks:
      - ecommnetwork
  
  rabbitmq: # login guest:guest
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: "rabbitmq"
    labels:
      NAME: "rabbitmq"
    ports:
     - "5672:5672"
     - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommnetwork

  capstone.ecommerceapp.authapi:
    image: ${DOCKER_REGISTRY-}authapi
    container_name: authapi
    build:
      context: .
      dockerfile: Capstone.ECommerceApp.Auth.API/Dockerfile
    depends_on:
      tga.mysql:
        condition: service_healthy
    ports:
      - "7002:443"
    env_file:
      - .env
    networks:
      - ecommnetwork

  capstone.ecommerceapp.productapi:
    image: ${DOCKER_REGISTRY-}productapi
    container_name: productapi
    build:
      context: .
      dockerfile: Capstone.ECommerceApp.Product.API/Dockerfile
    #This Service Depends on the database service specifed above
    depends_on:
      tga.mysql:
        condition: service_healthy
    ports:
      - "7000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__ProductDbConnection=Server=tga.mysql;port=3306;Database=TGA_Product;User=root;Password=password;
      - ApiSettings__JwtOptions__Secret=This is used to Sign and verify JWT tokens, Replace it with your own secret
      - ApiSettings__JwtOptions__Issuer=TGA-Auth-API
      - ApiSettings__JwtOptions__Audience=TGA-Client
      - ApiSettings__JwtOptions__ExpiryInHours=7
    networks:
      - ecommnetwork
  
  capstone.ecommerceapp.orderapi:
    image: ${DOCKER_REGISTRY-}orderapi
    container_name: orderapi
    build:
      context: .
      dockerfile: Capstone.ECommerceApp.Order.API/Dockerfile
    #This Service Depends on the database service specifed above
    depends_on:
      tga.mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "7004:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__OrderDbConnection=Server=tga.mysql;port=3306;Database=TGA_Order;User=root;Password=password;
      - ApiSettings__Secret=This is used to Sign and verify JWT tokens, Replace it with your own secret
      - ApiSettings__Issuer=TGA-Auth-API
      - ApiSettings__Audience=TGA-Client
      - ServiceUrls__ProductAPI=https://capstone.ecommerceapp.productapi:7000/
      - Stripe__SecretKey=sk_test_51QiGz5CQ7mJfnXMskjXynI3SYDC8L68EXwvj6mkKy3tXKBYCpxFfEJvjOTfJKxCx7XuhKKEpYyqP0Qj4hc7MFFSV00SRq4yB7H
    networks:
      - ecommnetwork
  
  capstone.ecommerceapp.shoppingcartapi:
    image: ${DOCKER_REGISTRY-}shoppingcartapi
    container_name: shoppingcartapi
    build:
      context: .
      dockerfile: Capstone.ECommerceApp.ShoppingCart.API/Dockerfile
    depends_on: 
      tga.mysql: 
          condition: service_healthy
    ports:
      - "7003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__CartDbConnection=Server=tga.mysql;port=3306;Database=TGA_ShoppingCart;User=root;Password=password;
      - ApiSettings__Secret=This is used to Sign and verify JWT tokens, Replace it with your own secret
      - ApiSettings__Issuer=TGA-Auth-API
      - ApiSettings__Audience=TGA-Client
      - ServiceUrls__ProductAPI=https://capstone.ecommerceapp.productapi:7000/
    networks:
      - ecommnetwork
  
  capstone.ecommerceapp.notificationapi:
    image: ${DOCKER_REGISTRY-}notificationapi
    container_name: notificationapi
    build:
      context: .
      dockerfile: Capstone.ECommerceApp.Notification.API/Dockerfile
    #This Service Depends on the database service specifed above
    depends_on: 
      tga.mysql: 
          condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "7005:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__NotificationDbConnection=Server=tga.mysql;port=3306;Database=TGA_Notification;User=root;Password=password;
      - ApiSettings__RabbitMQ__HostName=rabbitmq
      - ApiSettings__RabbitMQ__UserName=guest
      - ApiSettings__RabbitMQ__Password=guest
      - ApiSettings__RabbitMQ__TopicAndQueueNames__OrderQueue=userregistration
    networks:
      - ecommnetwork 

  capstone.ecommerceapp.ocelotapigateway:
    image: ${DOCKER_REGISTRY-}ocelotapigateway
    container_name: ocelotapigateway
    build:
      context: .
      dockerfile: Capstone.ECommerceApp.OcelotApiGateway/Dockerfile
    ports:
      - "7777:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ApiSettings__Secret=This is used to Sign and verify JWT tokens, Replace it with your own secret
      - ApiSettings__Issuer=TGA-Auth-API
      - ApiSettings__Audience=TGA-Client
    links:
      - capstone.ecommerceapp.productapi      
    depends_on:
      - capstone.ecommerceapp.productapi
    networks:
      - ecommnetwork

networks:
  ecommnetwork:
   driver: bridge     